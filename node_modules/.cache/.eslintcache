[{"/home/ataha/netflix-clone/src/index.js":"1","/home/ataha/netflix-clone/src/App.js":"2","/home/ataha/netflix-clone/src/serviceWorker.js":"3","/home/ataha/netflix-clone/src/app/store.js":"4","/home/ataha/netflix-clone/src/Nav.js":"5","/home/ataha/netflix-clone/src/Banner.js":"6","/home/ataha/netflix-clone/src/axios.js":"7","/home/ataha/netflix-clone/src/Requests.js":"8","/home/ataha/netflix-clone/src/Row.js":"9","/home/ataha/netflix-clone/src/screens/HomeScreen.js":"10","/home/ataha/netflix-clone/src/screens/LoginScreen.js":"11","/home/ataha/netflix-clone/src/screens/SignUpScreen.js":"12","/home/ataha/netflix-clone/src/firebase.js":"13","/home/ataha/netflix-clone/src/features/userSlice.js":"14","/home/ataha/netflix-clone/src/screens/ProfileScreen.js":"15"},{"size":644,"mtime":1617538553366,"results":"16","hashOfConfig":"17"},{"size":1301,"mtime":1617632654475,"results":"18","hashOfConfig":"17"},{"size":5141,"mtime":1617538553366,"results":"19","hashOfConfig":"17"},{"size":186,"mtime":1617630325595,"results":"20","hashOfConfig":"17"},{"size":1160,"mtime":1617632173042,"results":"21","hashOfConfig":"17"},{"size":1589,"mtime":1617553599411,"results":"22","hashOfConfig":"17"},{"size":130,"mtime":1617551469057,"results":"23","hashOfConfig":"17"},{"size":718,"mtime":1617555515956,"results":"24","hashOfConfig":"17"},{"size":1114,"mtime":1617576426645,"results":"25","hashOfConfig":"17"},{"size":911,"mtime":1617616748188,"results":"26","hashOfConfig":"17"},{"size":1640,"mtime":1617636077467,"results":"27","hashOfConfig":"17"},{"size":1408,"mtime":1617627657900,"results":"28","hashOfConfig":"17"},{"size":674,"mtime":1617626974269,"results":"29","hashOfConfig":"17"},{"size":1015,"mtime":1617630367944,"results":"30","hashOfConfig":"17"},{"size":1189,"mtime":1617633509119,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"8jbf4y",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ataha/netflix-clone/src/index.js",[],["66","67"],"/home/ataha/netflix-clone/src/App.js",["68"],"import React, { useEffect } from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport './App.css';\r\nimport {login ,logout, selectUser} from './features/userSlice'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport { auth } from './firebase';\r\nimport { useSelector } from 'react-redux';\r\nfunction App() {\r\n  const use= useSelector(selectUser)\r\n  const dispatch =useDispatch();\r\n  useEffect(()=>{\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth)=>{\r\n      if(userAuth){\r\n        console.log(userAuth)\r\n        dispatch(\r\n          login({\r\n            uid: userAuth.uid,\r\n            email: userAuth.email\r\n          })\r\n        );\r\n      }else{\r\n        dispatch(logout())\r\n      }\r\n    })\r\n    return unsubscribe;\r\n  },[])\r\n\r\n  return (\r\n  <div className=\"App\" style={{backgroundColor:'#111'}}>\r\n    \r\n    <Router>\r\n   \r\n     {!use?(\r\n       <LoginScreen/>\r\n     ):(   <Switch> \r\n       <Route path='/profile'>\r\n         <ProfileScreen/>\r\n       </Route>\r\n        <Route path=\"/\">\r\n     <HomeScreen/>\r\n   </Route>\r\n </Switch>)}\r\n      \r\n    </Router>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/ataha/netflix-clone/src/serviceWorker.js",[],"/home/ataha/netflix-clone/src/app/store.js",[],"/home/ataha/netflix-clone/src/Nav.js",["69"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport \"./Nav.css\"\nfunction Nave(){\n    const [show, handleShow] = useState(false);\n\n    const history = useHistory()\n\n    const transitionNavBar=()=>{\n      \n        if(window.scrollY>100){\n            handleShow(true)\n        }else{\n        handleShow(false)\n        }\n    };\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",\n       transitionNavBar);\n       return()=>window.removeEventListener(\"scroll\" , transitionNavBar);\n    }, [])\n    console.log(show)\n    return<div className={`nav ${show && \"nav_black\"}`}>\n        <div className=\"nav_contents\">\n        <img\n        onClick={()=>history.push(\"/\")}\n        className=\"nav_logo\"\n    src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"\"/>\n    <img\n    onClick={()=>history.push(\"/profile\")}\n    className=\"nav_avatar\"\n src=\"https://occ-0-4609-778.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABbme8JMz4rEKFJhtzpOKWFJ_6qX-0y5wwWyYvBhWS0VKFLa289dZ5zvRBggmFVWVPL2AAYE8xevD4jjLZjWumNo.png?r=a41\" \n alt=\"profile user image\"/>\n    </div>\n</div>\n}\nexport default Nave","/home/ataha/netflix-clone/src/Banner.js",[],"/home/ataha/netflix-clone/src/axios.js",[],"/home/ataha/netflix-clone/src/Requests.js",[],"/home/ataha/netflix-clone/src/Row.js",["70"],"import React, { useEffect, useState } from 'react'\n\nimport axios from './axios'\nimport \"./Row.css\"\n\nfunction Row({title, fetchUrl, isLargeRow= false}){\n    const [movies, setMovies] = useState([])\n    const base_url =\"https://image.tmdb.org/t/p/original/\"\nuseEffect(()=>{\n    async function fetchData(){\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results);\n        return request;\n    }\n    fetchData()\n    console.log(movies)\n}, [fetchUrl])\nconsole.log(title)\n    return(\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n            {movies.map((movie)=>(\n               ((isLargeRow && movie.poster_path)||\n               (!isLargeRow && movie.backdrop_path))&&(\n                <img  className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                key={movie.id}\n                src={`${base_url}${isLargeRow? movie.poster_path: movie.backdrop_path}`} \n                alt={movie.name}/>\n               )\n              \n           ))}\n            </div>\n            \n        </div>\n    )\n}\nexport default Row","/home/ataha/netflix-clone/src/screens/HomeScreen.js",[],"/home/ataha/netflix-clone/src/screens/LoginScreen.js",[],"/home/ataha/netflix-clone/src/screens/SignUpScreen.js",[],"/home/ataha/netflix-clone/src/firebase.js",[],"/home/ataha/netflix-clone/src/features/userSlice.js",[],"/home/ataha/netflix-clone/src/screens/ProfileScreen.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":33,"column":5,"nodeType":"77","endLine":33,"endColumn":7,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":30,"column":5,"nodeType":"81","endLine":34,"endColumn":28},{"ruleId":"75","severity":1,"message":"82","line":17,"column":4,"nodeType":"77","endLine":17,"endColumn":14,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["86"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [dispatch]",{"range":"92","text":"93"},"Update the dependencies array to be: [fetchUrl, movies]",{"range":"94","text":"95"},[926,928],"[dispatch]",[469,479],"[fetchUrl, movies]"]